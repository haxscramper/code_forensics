var annotated_dup =
[
    [ "boost", "namespaceboost.html", null ],
    [ "dod", "namespacedod.html", "namespacedod" ],
    [ "fmt", "namespacefmt.html", "namespacefmt" ],
    [ "git", "namespacegit.html", "namespacegit" ],
    [ "ir", "namespaceir.html", "namespaceir" ],
    [ "sqlite_orm", "namespacesqlite__orm.html", "namespacesqlite__orm" ],
    [ "std", "namespacestd.html", "namespacestd" ],
    [ "arg_pack", "structarg__pack.html", null ],
    [ "BoolOption", "class_bool_option.html", "class_bool_option" ],
    [ "finally", "structfinally.html", "structfinally" ],
    [ "generator", "structgenerator.html", "structgenerator" ],
    [ "is_base_of_template", "structis__base__of__template.html", "structis__base__of__template" ],
    [ "is_in_pack", "structis__in__pack.html", null ],
    [ "is_in_pack< V >", "structis__in__pack_3_01_v_01_4.html", "structis__in__pack_3_01_v_01_4" ],
    [ "is_in_pack< V, T0, T... >", "structis__in__pack_3_01_v_00_01_t0_00_01_t_8_8_8_01_4.html", "structis__in__pack_3_01_v_00_01_t0_00_01_t_8_8_8_01_4" ],
    [ "is_in_pack< V, V, T... >", "structis__in__pack_3_01_v_00_01_v_00_01_t_8_8_8_01_4.html", "structis__in__pack_3_01_v_00_01_v_00_01_t_8_8_8_01_4" ],
    [ "PyForensics", "class_py_forensics.html", "class_py_forensics" ],
    [ "SubTaskParams", "struct_sub_task_params.html", "struct_sub_task_params" ],
    [ "type_from_python", "structtype__from__python.html", "structtype__from__python" ],
    [ "type_into_python", "structtype__into__python.html", "structtype__into__python" ],
    [ "walker_config", "structwalker__config.html", "structwalker__config" ],
    [ "walker_state", "structwalker__state.html", "structwalker__state" ]
];