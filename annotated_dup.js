var annotated_dup =
[
    [ "boost", "namespaceboost.html", null ],
    [ "dod", "namespacedod.html", "namespacedod" ],
    [ "fmt", "namespacefmt.html", "namespacefmt" ],
    [ "git", "namespacegit.html", "namespacegit" ],
    [ "ir", "namespaceir.html", "namespaceir" ],
    [ "sqlite_orm", "namespacesqlite__orm.html", "namespacesqlite__orm" ],
    [ "std", "namespacestd.html", "namespacestd" ],
    [ "any_visitor", "structany__visitor.html", "structany__visitor" ],
    [ "bad_lexical_cast", "classbad__lexical__cast.html", "classbad__lexical__cast" ],
    [ "BoolOption", "class_bool_option.html", "class_bool_option" ],
    [ "CommitEdge", "struct_commit_edge.html", "struct_commit_edge" ],
    [ "CommitGraph", "struct_commit_graph.html", "struct_commit_graph" ],
    [ "CommitInfo", "struct_commit_info.html", "struct_commit_info" ],
    [ "DiffForeachParams", "struct_diff_foreach_params.html", "struct_diff_foreach_params" ],
    [ "EnumOption", "class_enum_option.html", "class_enum_option" ],
    [ "equal_ref", "structequal__ref.html", "structequal__ref" ],
    [ "FullCommitData", "struct_full_commit_data.html", "struct_full_commit_data" ],
    [ "PyForensics", "class_py_forensics.html", "class_py_forensics" ],
    [ "ScopedBar", "struct_scoped_bar.html", "struct_scoped_bar" ],
    [ "SubTaskParams", "struct_sub_task_params.html", "struct_sub_task_params" ],
    [ "type_from_python", "structtype__from__python.html", "structtype__from__python" ],
    [ "type_info_hash", "structtype__info__hash.html", "structtype__info__hash" ],
    [ "type_into_python", "structtype__into__python.html", "structtype__into__python" ],
    [ "validation_error", "classvalidation__error.html", "classvalidation__error" ],
    [ "walker_config", "structwalker__config.html", "structwalker__config" ],
    [ "walker_state", "structwalker__state.html", "structwalker__state" ]
];